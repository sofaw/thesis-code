// Find where LED is connected to the main arduino board
/*var led = Part.all.selectOne(p | p.partId == "58610");

var boardConnections : Sequence;
var visited : Set;

for(c in led.connections) {
  if(c.srcPart == led) {
    // BFS
    var queue = new Native("java.util.LinkedList");
    queue.add(c);
    var i = 0;
    while(not queue.isEmpty()) {
      var curr = queue.removeFirst();
      if(not (visited.includes(curr))) {
        visited.add(curr);
        if(curr.targetPart.partId == "58210" or curr.srcPart.partId == "58210") {
          boardConnections.add(curr);
        } else {
          for(ncon in curr.targetPart.connections) {
            queue.add(ncon);
          }
        }
      }
      
      i = i+1;
    }
  }
}*/

/*var bcs = findBoardConnections("58300", "58210");
bcs.println();
for(key in bcs.keySet()) {
  var con = bcs.get(key);
  if (con.srcPart.partId == "58210") {
    key.println();
    con.srcName.println();
  } else {
    key.println();
    con.targetName.println();
  }
}*/

printBoardConnections("58300", "58210");
" ".println();
printBoardConnections("58610", "58210");
" ".println();
printBoardConnections("58670", "58210");

operation printBoardConnections(partId : String, boardId : String) {
  var bcs = findBoardConnections(partId, boardId);
  for(key in bcs.keySet()) {
    var con = bcs.get(key);
    if (con.srcPart.partId == boardId) {
      key.println();
      con.srcName.println();
    } else {
      key.println();
      con.targetName.println();
    }
  }
}

// TODO: check resistor results -> does it fail on directly connected components?
// !!! Doesn't take into account that components have two ends so will eventually be connected to the board in two places
operation findBoardConnections(partId : String, boardId : String) : Map<Part> {
  var part = Part.all.selectOne(p | p.partId == partId);

  var boardConnections : Map;
  var visited : Set;

  for(c in part.connections) {
    // BFS
    var queue = new Native("java.util.LinkedList");
    queue.add(c);
    var i = 0;
    while(not queue.isEmpty()) {
      var curr = queue.removeFirst();
      if(not (visited.includes(curr))) {
        visited.add(curr);
        if(curr.targetPart.partId == boardId or curr.srcPart.partId == boardId) {
          var partConName;
          if(c.srcPart == part) {
            partConName = c.srcName;
          } else {
            partConName = c.targetName;
          }
          boardConnections.put(partConName, curr);
        } else {
          for(ncon in curr.targetPart.connections) {
            queue.add(ncon);
           }
        }
      }
    
      i = i+1;
    }
  }
  
  return boardConnections;
}
