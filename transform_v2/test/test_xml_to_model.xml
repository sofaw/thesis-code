<project>
	<target name="run-tests" depends="transform">
		<runTransform srcfile="All_Core_Input_Parts_netlist.xml" srcmodel="ALL_INPUTS_XML" transformfile="all_inputs.model" transformmodel="ALL_INPUTS_OUT" />
		<runTransform srcfile="All_Core_Output_Parts_netlist.xml" srcmodel="ALL_OUTPUTS_XML" transformfile="all_outputs.model" transformmodel="ALL_OUTPUTS_OUT" />
		<runTransform srcfile="All_Boards_netlist.xml" srcmodel="ALL_BOARDS_XML" transformfile="all_boards.model" transformmodel="ALL_BOARDS_OUT" />
		<runTransform srcfile="All_Other_Except_ICs_and_Textile_netlist.xml" srcmodel="ALL_OTHERS_XML" transformfile="all_others.model" transformmodel="ALL_OTHERS_OUT"/>
		<runTransform srcfile="Potentiometer_LED_netlist.xml" srcmodel="LED_XML" transformfile="led.model" transformmodel="LED_OUT" />

		<epsilon.eunit src="test_xml_to_model.eunit">
			<model ref="ALL_INPUTS_OUT" />
			<model ref="ALL_OUTPUTS_OUT" />
			<model ref="ALL_BOARDS_OUT" />
			<model ref="ALL_OTHERS_OUT" />
			<model ref="LED_OUT" />
		</epsilon.eunit>
	</target>

	<target name="transform">
		<macrodef name="runTransform">
			<attribute name="srcfile" />
			<attribute name="srcmodel" />
			<attribute name="transformfile" />
			<attribute name="transformmodel"/>

			<sequential>
				
				<epsilon.xml.loadModel name="CONFIG" file="../config.xml" read="true" store="true" />
				<epsilon.xml.loadModel name="@{srcmodel}" file="input_xml/@{srcfile}" read="true" store="false" />
				<epsilon.emf.loadModel name="@{transformmodel}" modelfile="transformation_output/@{transformfile}" metamodelfile="../metamodel_v2.ecore" read="true" store="true" />

				<!-- Apply transformation -->
				<epsilon.etl src="../xml_to_model.etl">
					<model ref="@{srcmodel}" as="XML" />
					<model ref="@{transformmodel}" as="OUT" />
					<model ref="CONFIG" />
				</epsilon.etl>

			</sequential>
		</macrodef>
	</target>
</project>