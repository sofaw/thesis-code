<project>
	<target name="run-tests" depends="transform-and-gen">
		<epsilon.xml.loadModel name="CONFIG"
		    file="test_config.xml" read="true" store="true" />
		
		<runGen srcfile="Potentiometer_LED_netlist.xml" srcmodel="LED_XML"
			transformfile="led.model" transformmodel="LED_OUT"
			targetfile="led.cpp" configFile="CONFIG"/>

		<runGen srcfile="Button_netlist.xml" srcmodel="BUTTON_XML"
			transformfile="button.model" transformmodel="BUTTON_OUT"
			targetfile="button.cpp" configFile="CONFIG"/>
		
		<runGen srcfile="Parking-Assistant_netlist.xml" srcmodel="PA_XML"
			transformfile="pa.model" transformmodel="PA_OUT"
			targetfile="pa.cpp" configFile="CONFIG"/>
		
		<runGen srcfile="7Segment_direct_netlist.xml" srcmodel="7_XML"
			transformfile="seven_seg.model" transformmodel="7_OUT"
			targetfile="seven_seg.cpp" configFile="CONFIG"/>
		
		<runGen srcfile="case_study_arduino_netlist.xml" srcmodel="CASE_STUDY_XML"
			transformfile="case_study.model" transformmodel="CASE_STUDY_OUT"
			targetfile="case_study.cpp" configFile="CONFIG"/>
		
		<runGen srcfile="One_Pin.xml" srcmodel="ONE_PIN_XML"
			transformfile="one_pin.model" transformmodel="ONE_PIN_OUT"
			targetfile="one_pin.cpp" configFile="CONFIG"/>
		
		<epsilon.eunit src="test_code_generation.eunit">
			<model ref="LED_OUT"/>
			<model ref="BUTTON_OUT"/>
			<model ref="PA_OUT"/>
			<model ref="7_OUT"/>
			<model ref="CASE_STUDY_OUT"/>
			<model ref="ONE_PIN_XML"/>
			<model ref="CONFIG" as="X"/>
		</epsilon.eunit>
	</target>

	<target name="transform-and-gen">
		<macrodef name="runGen">
			<attribute name="srcfile" />
			<attribute name="srcmodel" />
			<attribute name="transformfile" />
			<attribute name="transformmodel"/>
			<attribute name="targetfile" />
			<attribute name="configFile" />

			<sequential>
				<epsilon.xml.loadModel name="@{srcmodel}"
					file="input_xml/@{srcfile}" read="true" store="false" />
				<epsilon.emf.loadModel name="@{transformmodel}"
					modelfile="transformation_output/@{transformfile}" metamodelfile="../metamodel_v2.ecore"
					read="false" store="true" />

				<!-- Apply transformation -->
				<epsilon.etl src="transform_files/xml_to_model.etl">
					<model ref="@{srcmodel}" as="XML" />
					<model ref="@{transformmodel}" as="OUT" />
					<model ref="@{configFile}"/>
				</epsilon.etl>

				<!-- Generate code -->
				<epsilon.egl src="transform_files/generate_skeleton.egl" target="code_generation_output/@{targetfile}">
					<model ref="@{transformmodel}" />
					<model ref="@{configFile}" as="X"/>
				</epsilon.egl>
				
				<!-- Need to read here in case this is the first time file is created (read=false above) -->
				<epsilon.emf.loadModel name="@{transformmodel}"
					modelfile="transformation_output/@{transformfile}" metamodelfile="../metamodel_v2.ecore"
					read="true" store="false" />
			</sequential>
		</macrodef>
	</target>
</project>